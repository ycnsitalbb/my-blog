{"version":3,"sources":["pages/homepage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvoteSection.js","components/addCommentForm.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","Fragment","AboutPage","articles","name","title","content","ArtilcesList","map","article","key","to","ArticlesListPage","articleContent","NotFoundPage","CommentsList","comments","comment","className","username","text","UpvoteSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlesPage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","ArticlesList","NavBar","App","path","component","exact","ArticlePage","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.586425e9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst HomePage = () => (\r\n    <React.Fragment>    \r\n        <h1>Hellow, welcome to my blog!</h1>\r\n        <p>paragraph1</p>\r\n        <p>paragraph2</p>\r\n        <p>paragraph3</p>\r\n        <p>paragraph4</p>\r\n        <p>paragraph5</p></React.Fragment>\r\n\r\n)\r\n\r\nexport default HomePage","import React from 'react'\r\n\r\nconst AboutPage = () => (\r\n    <React.Fragment>    \r\n        <h1>Hellow, welcome to AboutPage!</h1>\r\n        <p>paragraph1</p>\r\n        <p>paragraph2</p>\r\n        <p>paragraph3</p>\r\n        <p>paragraph4</p>\r\n        <p>paragraph5</p></React.Fragment>\r\n\r\n)\r\n\r\nexport default AboutPage","const articles = [\r\n    {\r\n        name:'learn-react',\r\n        title:'fastest way to learn react',\r\n        content:[\r\n            'para1',\r\n            'para2',\r\n            'para3'\r\n        ]\r\n    },\r\n    {\r\n        name:'learn-node',\r\n        title:'fastest way to learn node',\r\n        content:[\r\n            'para1',\r\n            'para2',\r\n            'para3'\r\n        ]\r\n    },\r\n    {\r\n        name:'my-thoughts-on-resumes',\r\n        title:'fastest way to learn my-thoughts-on-resumes',\r\n        content:[\r\n            'para1',\r\n            'para2',\r\n            'para3'\r\n        ]\r\n    }\r\n]\r\nexport default articles","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ArtilcesList = ({articles})=>(\r\n    <React.Fragment>    \r\n    <h1>Articles</h1>\r\n    {articles.map((article,key)=>(\r\n        <Link key={key} to={`/article/${article.name}`}>\r\n            <h3>{article.title}</h3>\r\n        </Link>\r\n    ))}\r\n    </React.Fragment>\r\n)   \r\n\r\n\r\nexport default ArtilcesList","import React from 'react'\r\nimport articleContent from './article-content'\r\nimport articles from './article-content'\r\nimport articlesList from'../components/ArticlesList'\r\nimport ArtilcesList from '../components/ArticlesList'\r\n\r\nconst ArticlesListPage = () => (\r\n    <React.Fragment>    \r\n        <h1>Articles</h1>\r\n        <ArtilcesList articles={articleContent}></ArtilcesList>\r\n\r\n    </React.Fragment>\r\n\r\n)\r\n\r\nexport default ArticlesListPage","import React from 'react'\r\n\r\nconst NotFoundPage = ()=>(\r\n    <h1>404:Page Not Found</h1>\r\n)\r\nexport default NotFoundPage","import React from 'react';\r\n\r\nconst CommentsList = ({ comments }) => (\r\n    <>\r\n    <h3>Comments:</h3>\r\n    {comments.map((comment, key) => (\r\n        <div className=\"comment\" key={key}>\r\n            <h4>{comment.username}</h4>\r\n            <p>{comment.text}</p>\r\n        </div>\r\n    ))}\r\n    </>\r\n);\r\n\r\nexport default CommentsList;","import React from 'react'\r\n\r\nconst UpvoteSection = ({articleName,upvotes,setArticleInfo}) => {\r\n    const upvoteArticle = async()=>{\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`,{\r\n            method:'post'\r\n        })\r\n        const body = await result.json();\r\n        setArticleInfo(body)\r\n    }\r\n    return(\r\n    <div>\r\n        <button onClick={()=>upvoteArticle()}>Add Upvote</button>\r\n        <p>This post has been upvoted {upvotes} times</p>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default UpvoteSection;","import React, {useState} from 'react'\r\n\r\nconst AddCommentForm = ({articleName, setArticleInfo}) => {\r\n    const [username, setUsername] = useState('');\r\n    const [commentText,setCommentText] = useState('');\r\n    \r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`,{\r\n            method:'post',\r\n            body: JSON.stringify({username,text: commentText}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n        setUsername('')\r\n        setCommentText('')\r\n    }\r\n    return(    \r\n    <div>\r\n        <h3>Add a Comment</h3>\r\n        <label>\r\n            Name:\r\n            <input type=\"text\" value ={username} onChange={(event)=>setUsername(event.target.value)}></input>\r\n        </label>\r\n        <label>\r\n            Comment:\r\n            <textarea rows='4' cols='50' value={commentText} onChange={(event)=>setCommentText(event.target.value)}></textarea>\r\n        </label>\r\n        \r\n        <button onClick={()=>addComment()}>Add Comment</button>\r\n    </div>\r\n    )\r\n\r\n};\r\n\r\nexport default AddCommentForm","import React ,{useState,useEffect} from 'react'\r\nimport articleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport CommentsList from '../components/CommentsList'\r\nimport UpvotesSection from '../components/UpvoteSection'\r\nimport AddCommentForm from '../components/addCommentForm';\r\n\r\nconst ArticlesPage = ({match}) => {\r\n    const name = match.params.name;\r\n    const article = articleContent.find(article => article.name === name);\r\n\r\n    const [articleInfo, setArticleInfo] = useState({upvotes:0, comments:[]});\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async() =>{\r\n            const result = await fetch(`/api/articles/${name}`)\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n    },[name])\r\n\r\n    if(!article) return (<NotFoundPage></NotFoundPage>)\r\n\r\n    const otherArticles = articleContent.filter(article => article.name != name)\r\n\r\n    return(\r\n        <React.Fragment>    \r\n            <h1>{article.title}</h1>\r\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo}></UpvotesSection>\r\n            {article.content.map((paragraph, key)=>{\r\n                return(\r\n                    <p key={key}>{paragraph}</p>\r\n                )\r\n            })}\r\n            <CommentsList comments={articleInfo.comments}></CommentsList>\r\n            <AddCommentForm articleName={name} setArticleInfo={setArticleInfo}></AddCommentForm>\r\n            <h3>Related Articles:</h3>\r\n            <ArticlesList articles={otherArticles}></ArticlesList>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default ArticlesPage","import React from 'react'\r\nimport  {Link} from 'react-router-dom'\r\nconst NavBar = ()=>(\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/articles-list\">Articles</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)\r\nexport default NavBar","import React from 'react';\nimport './App.css';\nimport{ \n  BrowserRouter as Router,\n  Route,\n  Switch\n}from 'react-router-dom'\nimport HomePage from './pages/homepage'\nimport AboutPage from './pages/AboutPage'\nimport ArticlesList from './pages/ArticlesListPage'\nimport ArticlePage from './pages/ArticlePage'\nimport NavBar from './NavBar'\nimport NotFoundPage from './pages/NotFoundPage'\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <NavBar></NavBar>\n      <Switch>\n      <Route path=\"/\" component={HomePage} exact/>\n      <Route path=\"/about\" component={AboutPage} />\n      <Route path=\"/articles-list\" component={ArticlesList} />\n      <Route path=\"/article/:name\" component={ArticlePage} />\n      <Route component={NotFoundPage}></Route>\n      </Switch>\n    </div>\n    </Router>\n  );\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}